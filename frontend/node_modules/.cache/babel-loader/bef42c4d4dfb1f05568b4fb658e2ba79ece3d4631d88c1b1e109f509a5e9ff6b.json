{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, resetCart, updateCart } from './cartAPI';\nconst initialState = {\n  status: 'idle',\n  items: [],\n  cartLoaded: false\n};\nexport const addToCartAsync = createAsyncThunk('cart/addToCart', async _ref => {\n  let {\n    item,\n    alert\n  } = _ref;\n  const response = await addToCart(item);\n  alert.success('Item Added to Cart');\n\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchItemsByUserIdAsync = createAsyncThunk('cart/fetchItemsByUserId', async () => {\n  const response = await fetchItemsByUserId();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateCartAsync = createAsyncThunk('cart/updateCart', async update => {\n  const response = await updateCart(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const deleteItemFromCartAsync = createAsyncThunk('cart/deleteItemFromCart', async itemId => {\n  const response = await deleteItemFromCart(itemId);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const resetCartAsync = createAsyncThunk('cart/resetCart', async () => {\n  const response = await resetCart();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addToCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(addToCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items.push(action.payload);\n    }).addCase(fetchItemsByUserIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = action.payload;\n      state.cartLoaded = true;\n    }).addCase(fetchItemsByUserIdAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      state.cartLoaded = true;\n    }).addCase(updateCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      state.items[index] = action.payload;\n    }).addCase(deleteItemFromCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      state.items.splice(index, 1);\n    }).addCase(resetCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(resetCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = [];\n    });\n  }\n});\n\n// export const { increment } = cartSlice.actions;\n\nexport const selectItems = state => state.cart.items;\nexport const selectCartStatus = state => state.cart.status;\nexport const selectCartLoaded = state => state.cart.cartLoaded;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addToCart","deleteItemFromCart","fetchItemsByUserId","resetCart","updateCart","initialState","status","items","cartLoaded","addToCartAsync","_ref","item","alert","response","success","data","fetchItemsByUserIdAsync","updateCartAsync","update","deleteItemFromCartAsync","itemId","resetCartAsync","cartSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","index","findIndex","id","splice","selectItems","cart","selectCartStatus","selectCartLoaded","reducer"],"sources":["C:/Users/princ/Desktop/ecommerceweb/frontend/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, resetCart, updateCart } from './cartAPI';\r\n\r\nconst initialState = {\r\n  status: 'idle',\r\n  items: [],\r\n  cartLoaded: false\r\n};\r\n\r\nexport const addToCartAsync = createAsyncThunk(\r\n  'cart/addToCart',\r\n  async ({item, alert}) => {\r\n    const response = await addToCart(item);\r\n    alert.success('Item Added to Cart');\r\n\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchItemsByUserIdAsync = createAsyncThunk(\r\n  'cart/fetchItemsByUserId',\r\n  async () => {\r\n    const response = await fetchItemsByUserId();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateCartAsync = createAsyncThunk(\r\n  'cart/updateCart',\r\n  async (update) => {\r\n    const response = await updateCart(update);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deleteItemFromCartAsync = createAsyncThunk(\r\n  'cart/deleteItemFromCart',\r\n  async (itemId) => {\r\n    const response = await deleteItemFromCart(itemId);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const resetCartAsync = createAsyncThunk(\r\n  'cart/resetCart',\r\n  async () => {\r\n    const response = await resetCart();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addToCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(addToCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';    \r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = action.payload;\r\n        state.cartLoaded = true;\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.rejected, (state, action) => {\r\n        state.status = 'idle';\r\n        state.cartLoaded = true;\r\n      })\r\n      .addCase(updateCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(updateCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\r\n        state.items[index] = action.payload;\r\n      })\r\n      .addCase(deleteItemFromCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\r\n        state.items.splice(index,1);\r\n      })\r\n      .addCase(resetCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(resetCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = [];\r\n      })\r\n  },\r\n});\r\n\r\n// export const { increment } = cartSlice.actions;\r\n\r\nexport const selectItems = (state) => state.cart.items;\r\nexport const selectCartStatus = (state) => state.cart.status;\r\nexport const selectCartLoaded = (state) => state.cart.cartLoaded;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}