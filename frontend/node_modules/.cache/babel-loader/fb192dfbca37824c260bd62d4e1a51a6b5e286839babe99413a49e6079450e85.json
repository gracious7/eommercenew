{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, resetCart, updateCart } from './cartAPI';\nimport toast from '../../../toast';\nconst initialState = {\n  status: 'idle',\n  items: [],\n  cartLoaded: false\n};\nexport const addToCartAsync = createAsyncThunk('cart/addToCart', async _ref => {\n  let {\n    item,\n    alert\n  } = _ref;\n  const response = await addToCart(item);\n  toast('Item Added to Cart');\n\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchItemsByUserIdAsync = createAsyncThunk('cart/fetchItemsByUserId', async () => {\n  const response = await fetchItemsByUserId();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateCartAsync = createAsyncThunk('cart/updateCart', async update => {\n  const response = await updateCart(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const deleteItemFromCartAsync = createAsyncThunk('cart/deleteItemFromCart', async itemId => {\n  const response = await deleteItemFromCart(itemId);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const resetCartAsync = createAsyncThunk('cart/resetCart', async () => {\n  const response = await resetCart();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addToCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(addToCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items.push(action.payload);\n    }).addCase(fetchItemsByUserIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = action.payload;\n      state.cartLoaded = true;\n    }).addCase(fetchItemsByUserIdAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      state.cartLoaded = true;\n    }).addCase(updateCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      state.items[index] = action.payload;\n    }).addCase(deleteItemFromCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      state.items.splice(index, 1);\n    }).addCase(resetCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(resetCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = [];\n    });\n  }\n});\n\n//delete all item\nexport const deleteAllItemsFromCartAsync = createAsyncThunk('cart/deleteAllItems', async (_, _ref2) => {\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  const itemsToDelete = selectItems(getState()); // Assuming you have a selector \n  itemsToDelete.forEach(item => {\n    dispatch(deleteItemFromCartAsync(item.id));\n  });\n});\n\n// export const { increment } = cartSlice.actions;\n\nexport const selectItems = state => state.cart.items;\nexport const selectCartStatus = state => state.cart.status;\nexport const selectCartLoaded = state => state.cart.cartLoaded;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addToCart","deleteItemFromCart","fetchItemsByUserId","resetCart","updateCart","toast","initialState","status","items","cartLoaded","addToCartAsync","_ref","item","alert","response","data","fetchItemsByUserIdAsync","updateCartAsync","update","deleteItemFromCartAsync","itemId","resetCartAsync","cartSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","index","findIndex","id","splice","deleteAllItemsFromCartAsync","_","_ref2","dispatch","getState","itemsToDelete","selectItems","forEach","cart","selectCartStatus","selectCartLoaded","reducer"],"sources":["C:/Users/princ/Desktop/ecommerceweb/frontend/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { addToCart, deleteItemFromCart, fetchItemsByUserId, resetCart, updateCart } from './cartAPI';\r\nimport toast from '../../../toast';\r\n\r\nconst initialState = {\r\n  status: 'idle',\r\n  items: [],\r\n  cartLoaded: false\r\n};\r\n\r\nexport const addToCartAsync = createAsyncThunk(\r\n  'cart/addToCart',\r\n  async ({item, alert}) => {\r\n    const response = await addToCart(item);\r\n    toast('Item Added to Cart');\r\n\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchItemsByUserIdAsync = createAsyncThunk(\r\n  'cart/fetchItemsByUserId',\r\n  async () => {\r\n    const response = await fetchItemsByUserId();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateCartAsync = createAsyncThunk(\r\n  'cart/updateCart',\r\n  async (update) => {\r\n    const response = await updateCart(update);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deleteItemFromCartAsync = createAsyncThunk(\r\n  'cart/deleteItemFromCart',\r\n  async (itemId) => {\r\n    const response = await deleteItemFromCart(itemId);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const resetCartAsync = createAsyncThunk(\r\n  'cart/resetCart',\r\n  async () => {\r\n    const response = await resetCart();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addToCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(addToCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';    \r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = action.payload;\r\n        state.cartLoaded = true;\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.rejected, (state, action) => {\r\n        state.status = 'idle';\r\n        state.cartLoaded = true;\r\n      })\r\n      .addCase(updateCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(updateCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\r\n        state.items[index] = action.payload;\r\n      })\r\n      .addCase(deleteItemFromCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(deleteItemFromCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        const index =  state.items.findIndex(item=>item.id===action.payload.id)\r\n        state.items.splice(index,1);\r\n      })\r\n      .addCase(resetCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(resetCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = [];\r\n      })\r\n  },\r\n});\r\n\r\n//delete all item\r\nexport const deleteAllItemsFromCartAsync = createAsyncThunk( \r\n  'cart/deleteAllItems', \r\n  async (_, { dispatch, getState }) => { \r\n    const itemsToDelete = selectItems(getState()); // Assuming you have a selector \r\n    itemsToDelete.forEach(item => { \r\n      dispatch(deleteItemFromCartAsync(item.id)); \r\n    }); \r\n  } \r\n);\r\n\r\n// export const { increment } = cartSlice.actions;\r\n\r\nexport const selectItems = (state) => state.cart.items;\r\nexport const selectCartStatus = (state) => state.cart.status;\r\nexport const selectCartLoaded = (state) => state.cart.cartLoaded;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}